{"version":3,"file":"index.js","sources":["../../src/courses/p29.ts","../../src/app.ts"],"sourcesContent":["const p29 = () => {\r\n  interface Event {\r\n    on: (name: string, fn: Function) => void;\r\n    emit: (name: string, ...args: Array<any>) => void;\r\n    off: (name: string, fn: Function) => void;\r\n    once: (name: string, fn: Function) => void;\r\n  }\r\n  interface List {\r\n    [key: string]: Array<Function>;\r\n  }\r\n  class Dispatch implements Event {\r\n    list: List;\r\n    constructor() {\r\n      this.list = {};\r\n    }\r\n    // 监听\r\n    on(name: string, fn: Function) {\r\n      const callback = this.list[name] || [];\r\n      callback.push(fn);\r\n      this.list[name] = callback;\r\n    }\r\n    // 派发\r\n    emit(name: string, ...args: Array<any>) {\r\n      let eventName = this.list[name];\r\n      if (eventName) {\r\n        eventName.forEach((fn) => {\r\n          fn.apply(this, args);\r\n        });\r\n      } else {\r\n        console.warn(`名称错误${name}`);\r\n      }\r\n    }\r\n    // 卸载监听器\r\n    off(name: string, fn: Function) {\r\n      let eventName = this.list[name];\r\n      if (eventName && fn) {\r\n        let index = eventName.findIndex((fns) => fns === fn);\r\n        eventName.splice(index, 1);\r\n        console.log(eventName);\r\n      } else {\r\n        console.warn(`名称错误${name}`);\r\n      }\r\n    }\r\n    // 只调用一次\r\n    once(name: string, fn: Function) {\r\n      let de = (...args: Array<any>) => {\r\n        fn.apply(this, args);\r\n        // 用完就删掉\r\n        this.off(name, de);\r\n      };\r\n      this.on(name, de);\r\n    }\r\n  }\r\n  const o = new Dispatch();\r\n  // 监听\r\n  const fn = (...args: Array<any>) => {\r\n    // 拿到派发的参数\r\n    console.log(args, args[0]);\r\n  };\r\n  o.on(\"post\", fn);\r\n  o.on(\"get\", fn);\r\n  // 派发\r\n  o.emit(\"post\", 1, false, () => {});\r\n  o.emit(\"get\", 2, true, () => {});\r\n  // 卸载监听器\r\n  o.off(\"post\", fn);\r\n  // 不会触发再触发post监听器\r\n  o.emit(\"post\", 3, false, () => {});\r\n  // 只有一次\r\n  o.once(\"del\", () => {\r\n    console.log(\"执行完del就没了\");\r\n  });\r\n  o.emit(\"del\");\r\n  o.emit(\"del\");\r\n};\r\nexport { p29 };\r\n","import { p01 } from \"./courses/p01\";\r\nimport { p02 } from \"./courses/p02\";\r\nimport { p03 } from \"./courses/p03\";\r\nimport { p04 } from \"./courses/p04\";\r\nimport { p05 } from \"./courses/p05\";\r\nimport { p06 } from \"./courses/p06\";\r\nimport { p07 } from \"./courses/p07\";\r\nimport { p08 } from \"./courses/p08\";\r\nimport { p09 } from \"./courses/p09\";\r\nimport { p10 } from \"./courses/p10\";\r\nimport { p11 } from \"./courses/p11\";\r\nimport { p12 } from \"./courses/p12\";\r\nimport { p13 } from \"./courses/p13\";\r\nimport { p14 } from \"./courses/p14\";\r\nimport { p15 } from \"./courses/p15\";\r\nimport { p16 } from \"./courses/p16\";\r\nimport { p17 } from \"./courses/p17\";\r\nimport { p18 } from \"./courses/p18\";\r\nimport { p20 } from \"./courses/p20\";\r\nimport { p21 } from \"./courses/p21\";\r\nimport { p22 } from \"./courses/p22\";\r\nimport { p23 } from \"./courses/p23\";\r\nimport { p24 } from \"./courses/p24\";\r\nimport { p29 } from \"./courses/p29\";\r\nimport { Dictionaries } from \"./enum\";\r\nimport { Data, Expire, Key, Result, StorageCls } from \"./type\";\r\n\r\n/* p01();\r\np02();\r\np03();\r\np04();\r\np05();\r\np06();\r\np07();\r\np08();\r\np09();\r\np10();\r\np11();\r\np12();\r\np13();\r\np14();\r\np15();\r\np16();\r\np17();\r\np18();\r\np20();\r\np21();\r\np22();\r\np23();\r\np24();\r\nconst a: string = \"小满好短sss\";\r\nconsole.log(a);\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(\"开发\");\r\n} else {\r\n  console.log(\"生产\");\r\n}\r\nlet a: string = \"webpack + TS\";\r\nconsole.log(a);\r\nexport const a: number = 1;\r\nexport const b: string = \"ikun\";\r\nlet x = 1;\r\nlet fn = () => 123;\r\nconsole.log(x, fn);\r\nexport class Storage implements StorageCls {\r\n  get<T>(key: Key): Result<T | null> {\r\n    const value = localStorage.getItem(key);\r\n    if (value) {\r\n      const data: Data<T> = JSON.parse(value);\r\n      const now = new Date().getTime();\r\n      if (\r\n        typeof data[Dictionaries.expire] == \"number\" &&\r\n        data[Dictionaries.expire] < now\r\n      ) {\r\n        this.remove(key);\r\n        return {\r\n          message: `您的${key}已过期`,\r\n          value: null,\r\n        };\r\n      } else {\r\n        return {\r\n          message: \"成功\",\r\n          value: data.value,\r\n        };\r\n      }\r\n    } else {\r\n      return {\r\n        message: \"值无效\",\r\n        value: null,\r\n      };\r\n    }\r\n  }\r\n  set<T>(key: Key, value: T, expire: Expire = Dictionaries.permanent) {\r\n    const data = {\r\n      value,\r\n      [Dictionaries.expire]: expire,\r\n    };\r\n\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n  }\r\n  remove(key: Key) {\r\n    localStorage.removeItem(key);\r\n  }\r\n  clear() {\r\n    localStorage.clear();\r\n  }\r\n} */\r\np29();\r\n"],"names":["o","list","constructor","this","on","name","fn","callback","push","emit","args","eventName","forEach","apply","console","warn","off","index","findIndex","fns","splice","log","once","de","p29"],"mappings":"+QAAY,MAqDV,MAAMA,EAAI,IA3CV,MACEC,KACAC,cACEC,KAAKF,KAAO,EACb,CAEDG,GAAGC,EAAcC,GACf,MAAMC,EAAWJ,KAAKF,KAAKI,IAAS,GACpCE,EAASC,KAAKF,GACdH,KAAKF,KAAKI,GAAQE,CACnB,CAEDE,KAAKJ,KAAiBK,GACpB,IAAIC,EAAYR,KAAKF,KAAKI,GACtBM,EACFA,EAAUC,SAASN,IACjBA,EAAGO,MAAMV,KAAMO,EAAK,IAGtBI,QAAQC,KAAK,OAAOV,IAEvB,CAEDW,IAAIX,EAAcC,GAChB,IAAIK,EAAYR,KAAKF,KAAKI,GAC1B,GAAIM,GAAaL,EAAI,CACnB,IAAIW,EAAQN,EAAUO,WAAWC,GAAQA,IAAQb,IACjDK,EAAUS,OAAOH,EAAO,GACxBH,QAAQO,IAAIV,EACb,MACCG,QAAQC,KAAK,OAAOV,IAEvB,CAEDiB,KAAKjB,EAAcC,GACjB,IAAIiB,EAAK,IAAIb,KACXJ,EAAGO,MAAMV,KAAMO,GAEfP,KAAKa,IAAIX,EAAMkB,EAAG,EAEpBpB,KAAKC,GAAGC,EAAMkB,EACf,GAIGjB,EAAK,IAAII,KAEbI,QAAQO,IAAIX,EAAMA,EAAK,GAAG,EAE5BV,EAAEI,GAAG,OAAQE,GACbN,EAAEI,GAAG,MAAOE,GAEZN,EAAES,KAAK,OAAQ,GAAG,GAAO,SACzBT,EAAES,KAAK,MAAO,GAAG,GAAM,SAEvBT,EAAEgB,IAAI,OAAQV,GAEdN,EAAES,KAAK,OAAQ,GAAG,GAAO,SAEzBT,EAAEsB,KAAK,OAAO,KACZR,QAAQO,IAAI,YAAY,IAE1BrB,EAAES,KAAK,OACPT,EAAES,KAAK,MAAM,ECkCfe"}